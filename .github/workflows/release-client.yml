---
name: Release Client

on:
  push:
    tags:
      - client-*.*.*

permissions:
  id-token: write  # This is required for requesting the JWT
  contents: write  # This is required for creating a release

env:
  CARGO_TERM_COLOR: always

jobs:
  build-binary:
    name: Build and push binaries to github release page
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Refresh source list
        run: |
          sudo apt update
      - name: Install dependencies
        run: >
          sudo apt install -y
          protobuf-compiler
          pkg-config
          libssl-dev
      - name: Run tests
        run: |
          . "$HOME/.cargo/env"
          cargo test --bin ivynet
      - name: Build binaries
        run: |
          cargo build --release --bin ivynet
      - name: Make release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/release/ivynet
          make_latest: true

  build-image:
    name: Build image with packer
    runs-on: ubuntu-latest
    needs: build-binary
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Refresh source list
        run: |
          sudo apt update
      - name: Inject packages
        run: >
          pipx inject ansible-core
          jmespath
          google-auth
          requests
      - name: Install toml (package)
        run: |
          cargo install toml-cli
      - name: Create a file with the vault password
        run: echo "$ANSIBLE_VAULT" > ~/.vault.txt
        env:
          ANSIBLE_VAULT: ${{ secrets.ANSIBLE_VAULT }}
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: Google credentials for Packer
        env:
          PACKER_CREDS: '${{ secrets.PACKER_GCP_CREDENTIALS }}'
        run: |
          echo "${PACKER_CREDS}" >  /tmp/packer_gcp.json
      - name: Run Packer
        env:
          CONFIG: cloudstation.pkr.hcl
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/packer_gcp.json
        run: |
          cd devops/packer
          ./cloudstation.sh
