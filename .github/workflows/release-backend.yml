---
name: Release Backend

on:
  push:
    tags:
      - backend-*.*.*

permissions:
  id-token: write  # This is required for requesting the JWT
  contents: write  # This is required for creating a release

env:
  CARGO_TERM_COLOR: always

jobs:
  build-binary:
    name: Build and push binaries to github release page
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Refresh source list
        run: |
          sudo apt update
      - name: Install dependencies
        run: >
          sudo apt install -y
          protobuf-compiler
          pkg-config
          libssl-dev
      - name: Install official Rust
        run: >
          curl
          --proto '=https'
          --tlsv1.2
          -sSf
          https://sh.rustup.rs
          |
          sh -s -- -y
      - name: Run tests
        run: |
          . "$HOME/.cargo/env"
          cd backend
          cargo test
      - name: Build binaries
        run: |
          cd backend
          cargo build --release
      - name: Make release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/release/ivynet-backend
          make_latest: false

  build-image:
    name: Build image with packer
    runs-on: ubuntu-latest
    needs: build-binary
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Refresh source list
        run: |
          sudo apt update
      - name: Install packages for TOML (cargo package)
        run: >
          sudo apt install -y
          cargo
      - name: Install toml (package)
        run: |
          cargo install toml-cli
      - name: Install Ansible
        run: |
          sudo apt install -y software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install -y ansible
      - name: Create a file with the vault password
        run: echo "$ANSIBLE_VAULT" > ~/.vault.txt
        env:
          ANSIBLE_VAULT: ${{ secrets.ANSIBLE_VAULT }}
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - name: Google credentials for Packer
        env:
          PACKER_CREDS: '${{ secrets.PACKER_GCP_CREDENTIALS }}'
        run: |
          echo "${PACKER_CREDS}" >  /tmp/packer_gcp.json
      - name: Run Packer
        env:
          CONFIG: backend.pkr.hcl
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/packer_gcp.json
        run: |
          cd devops/packer
          ./backend.sh

#  update-test:
#    name: Update test servers
#    runs-on: ubuntu-latest
#    needs: build-binary
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@4
#      - name: Install Ansible
#        run: |
#          sudo apt install -y software-properties-common
#          sudo add-apt-repository --yes --update ppa:ansible/ansible
#          sudo apt install -y ansible
#      - name: Create a file with the vault password
#        run: echo "$ANSIBLE_VAULT" > ~/.vault.txt
#        env:
#          ANSIBLE_VAULT: ${{ secrets.ANSIBLE_VAULT }}
#      - name: Run ansible
#        run: |
#          cd devops/ansible
#          ./backend_update.sh
