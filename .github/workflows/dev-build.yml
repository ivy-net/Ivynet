---
name: Build and Tag on Merge

on:
  pull_request:
    types:
      - closed
    branches:
      - dev

jobs:

  build:
    name: Build everything
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Refresh source list
        run: |
          sudo apt update
      - name: Install dependencies
        run: >
          sudo apt install -y
          protobuf-compiler
          pkg-config
          libssl-dev
      - name: Install official Rust
        run: >
          curl
          --proto '=https'
          --tlsv1.2
          -sSf
          https://sh.rustup.rs
          |
          sh -s -- -y
      - name: Build binaries
        run: |
          . "$HOME/.cargo/env"
          cargo build --release


  tag-backend:
    name: Tag backend
    if: github.event.pull_request.merged == true
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install official Rust
        run: >
          curl
          --proto '=https'
          --tlsv1.2
          -sSf
          https://sh.rustup.rs
          |
          sh -s -- -y
      - name: Install TOML cli
        run: |
          . "$HOME/.cargo/env"
          cargo install toml-cli
          echo "path: $PATH"
      - name: Extract TOML version
        id: version-backend
        run: |
          version=$(toml get backend/Cargo.toml package.version | tr -d \")
          echo "TAG_BACKEND_TOML=${version}" >> "$GITHUB_OUTPUT"
          echo "Version: ${version}"
      - name: Get latest git tag
        id: tag-backend
        run: |
          git pull --tags
          tag=$(git tag | awk -F- '/backend/ {print $2}'| tail -1)
          echo "TAG_BACKEND_GIT=${tag}" >> "$GITHUB_OUTPUT"
          echo "Tag: ${tag}"
      - name: Print versions
        run:
          echo "TOML: ${{ steps.version-backend.outputs.TAG_BACKEND_TOML }}"
          echo "GIT: ${{ steps.tag-backend.outputs.TAG_BACKEND_GIT }}"
      - name: Create new git tag
        if: >
          steps.version-backend.outputs.TAG_BACKEND_TOML
          !=
          steps.tag-backend.outputs.TAG_BACKEND_GIT
        env:
          NEW_TAG: backend-${{ steps.version-backend.outputs.TAG_BACKEND_TOML }}
        run: |
          git tag -f ${NEW_TAG}
          git push origin ${NEW_TAG}

  tag-cli:
    name: Tag client
    if: github.event.pull_request.merged == true
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install official Rust
        run: >
          curl
          --proto '=https'
          --tlsv1.2
          -sSf
          https://sh.rustup.rs
          |
          sh -s -- -y
      - name: Install TOML cli
        run: |
          . "$HOME/.cargo/env"
          cargo install toml-cli
      - name: Extract TOML version
        id: version-cli
        run: |
          version=$(toml get cli/Cargo.toml package.version | tr -d \")
          echo "TAG_CLI_TOML=${version}" >> "$GITHUB_OUTPUT"
          echo "Version: ${version}"
      - name: Get latest tag
        id: tag-cli
        run: |
          git pull --tags
          tag=$(git tag | awk -F- '/client/ {print $2}' | tail -1)
          echo "TAG_CLI_GIT=${tag}" >> "$GITHUB_OUTPUT"
          echo "Tag: ${tag}"
      - name: Print versions
        run:
          echo "TOML: ${{ steps.version-cli.outputs.TAG_CLI_TOML }}"
          echo "GIT: ${{ steps.tag-cli.outputs.TAG_CLI_GIT }}"
      - name: Create git tag
        if: >
          steps.version-cli.outputs.TAG_CLI_TOML
          !=
          steps.tag-cli.outputs.TAG_CLI_GIT
        env:
          NEW_TAG: client-${{ steps.version-cli.TAG_CLI_TOML }}
        run: |
          git tag -f ${NEW_TAG}
          git push origin ${NEW_TAG}
